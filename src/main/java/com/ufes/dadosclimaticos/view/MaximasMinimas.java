/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.ufes.dadosclimaticos.view;

import com.ufes.dadosclimaticos.model.DadosClimaticos;
import java.awt.Color;
import javax.swing.BorderFactory;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author guiro
 */
public class MaximasMinimas extends javax.swing.JInternalFrame {

    /**
     * Creates new form MaximasMinimas
     */
    private DadosClimaticos maxima;
    private DadosClimaticos minima;
    
    
    public MaximasMinimas() {
        initComponents();
        initUI();
    }
    private void initUI() {

        CategoryDataset dataset = createDataset();
        JFreeChart chart = createChart(dataset);

        ChartPanel chartPanel = new ChartPanel(chart);
        chartPanel.setBorder(BorderFactory.createEmptyBorder(15, 15, 15, 15));
        chartPanel.setBackground(Color.white);
        add(chartPanel);
        pack();
    }

    private CategoryDataset createDataset() {
        DefaultCategoryDataset dataset =  new DefaultCategoryDataset();
        dataset.addValue(maxima.getTemperatura(), "Max", "Temperatura");
        dataset.addValue(minima.getTemperatura(), "Min", "Temperatura");
        
        dataset.addValue(maxima.getUmidade(), "Max", "Umidade");
        dataset.addValue(minima.getUmidade(), "Min", "Umidade");
        
        dataset.addValue(maxima.getPresao(), "Max", "Pressão");
        dataset.addValue(minima.getPresao(), "Min", "Pressão");
        
        return dataset;
    }

    private JFreeChart createChart(CategoryDataset dataset) {
        return ChartFactory.createBarChart(
                "Máximas e Mínimas",
                "Umidade",
                null,
                dataset,
                PlotOrientation.VERTICAL,
                true,
                false,
                false
        );
    }

    public void setMaxima(DadosClimaticos maxima) {
        this.maxima = maxima;
    }

    public void setMinima(DadosClimaticos minima) {
        this.minima = minima;
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
